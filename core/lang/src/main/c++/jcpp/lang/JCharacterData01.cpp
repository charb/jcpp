#include "jcpp/lang/JCharacterData01.h"
#include <cassert>

namespace jcpp {
	namespace lang {

	JCharacterData01::JCharacterData01() : JCharacterData(getClazz()) {

	}

	jint JCharacterData01::getProperties(jint ch) {
		jchar offset =(jchar)ch;
		jint props = A->getInt((jint)(Y->getChar((X->getChar(offset>>5)<<4)|((offset>>1)&0xF))<<1)|(offset&0x1));
		return props;
	}

	jint JCharacterData01::getPropertiesEx(jint ch) {
		jchar offset = (jchar)ch;
		jint props = B->getChar((jint)(Y->getChar((jint)(X->getChar(offset>>5)<<4)|((offset>>1)&0xF))<<1)|(offset&0x1));
		return props;
	}

	jint JCharacterData01::getType(jint ch) {
		jint props = getProperties(ch);
		return (props & 0x1F);
	}

	jbool JCharacterData01::isOtherLowercase(jint ch) {
		jint props = getPropertiesEx(ch);
		return (props & 0x0001) != 0;
	}

	jbool JCharacterData01::isOtherUppercase(jint ch) {
		jint props = getPropertiesEx(ch);
		return (props & 0x0002) != 0;
	}

	jbool JCharacterData01::isOtherAlphabetic(jint ch) {
		jint props = getPropertiesEx(ch);
		return (props & 0x0004) != 0;
	}

	jbool JCharacterData01::isIdeographic(jint ch) {
		jint props = getPropertiesEx(ch);
		return (props & 0x0010) != 0;
	}

	jbool JCharacterData01::isJavaIdentifierStart(jint ch) {
		jint props = getProperties(ch);
		return ((props & 0x00007000) >= 0x00005000);
	}

	jbool JCharacterData01::isJavaIdentifierPart(jint ch) {
		jint props = getProperties(ch);
		return ((props & 0x00003000) != 0);
	}

	jbool JCharacterData01::isUnicodeIdentifierStart(jint ch) {
		jint props = getProperties(ch);
		return ((props & 0x00007000) == 0x00007000);
	}

	jbool JCharacterData01::isUnicodeIdentifierPart(jint ch) {
		jint props = getProperties(ch);
		return ((props & 0x00001000) != 0);
	}

	jbool JCharacterData01::isIdentifierIgnorable(jint ch) {
		jint props = getProperties(ch);
		return ((props & 0x00007000) == 0x00001000);
	}

	jint JCharacterData01::toLowerCase(jint ch) {
		jint mapChar = ch;
		jint val = getProperties(ch);

		if ((val & 0x00020000) != 0) {
			jint offset = val << 5 >> (5+18);
			mapChar = ch + offset;
		}
		return mapChar;
	}

	jint JCharacterData01::toUpperCase(jint ch) {
		jint mapChar = ch;
		jint val = getProperties(ch);

		if ((val & 0x00010000) != 0) {
			jint offset = val  << 5 >> (5+18);
			mapChar = ch - offset;
		}
		return mapChar;
	}

	jint JCharacterData01::toTitleCase(jint ch) {
		jint mapChar= ch;
		jint val = getProperties(ch);

		if ((val & 0x00008000) != 0) {
			if ((val & 0x00010000) == 0) {
				mapChar = ch + 1;
			}
			else if ((val & 0x00020000) == 0) {
				mapChar = ch - 1;
			}
		}
		else if ((val & 0x00010000) != 0) {
			mapChar = toUpperCase(ch);
		}
		return mapChar;
	}

	jint JCharacterData01::digit(jint ch, jint radix) {
		jint value = -1;
		if (radix >= JCharacter::MIN_RADIX && radix <= JCharacter::MAX_RADIX) {
			jint val = getProperties(ch);
			jint kind = val & 0x1F;
			if (kind == JCharacter::DECIMAL_DIGIT_NUMBER) {
				value = ch + ((val & 0x3E0) >> 5) & 0x1F;
			}
			else if ((val & 0xC00) == 0x00000C00) {
				value = (ch + ((val & 0x3E0) >> 5) & 0x1F) + 10;
			}
		}
		return (value < radix) ? value : -1;
	}

	jint JCharacterData01::getNumericValue(jint ch) {
		jint val = getProperties(ch);
		jint retval = -1;

		switch (val & 0xC00) {
		default:
		case (0x00000000):
			retval = -1;
			break;
		case (0x00000400):
			retval = ch + ((val & 0x3E0) >> 5) & 0x1F;
			break;
		case (0x00000800):
		switch(ch) {
			case 0x10113: retval = 40; break;      // AEGEAN NUMBER FORTY
			case 0x10114: retval = 50; break;      // AEGEAN NUMBER FIFTY
			case 0x10115: retval = 60; break;      // AEGEAN NUMBER SIXTY
			case 0x10116: retval = 70; break;      // AEGEAN NUMBER SEVENTY
			case 0x10117: retval = 80; break;      // AEGEAN NUMBER EIGHTY
			case 0x10118: retval = 90; break;      // AEGEAN NUMBER NINETY
			case 0x10119: retval = 100; break;     // AEGEAN NUMBER ONE HUNDRED
			case 0x1011A: retval = 200; break;     // AEGEAN NUMBER TWO HUNDRED
			case 0x1011B: retval = 300; break;     // AEGEAN NUMBER THREE HUNDRED
			case 0x1011C: retval = 400; break;     // AEGEAN NUMBER FOUR HUNDRED
			case 0x1011D: retval = 500; break;     // AEGEAN NUMBER FIVE HUNDRED
			case 0x1011E: retval = 600; break;     // AEGEAN NUMBER SIX HUNDRED
			case 0x1011F: retval = 700; break;     // AEGEAN NUMBER SEVEN HUNDRED
			case 0x10120: retval = 800; break;     // AEGEAN NUMBER EIGHT HUNDRED
			case 0x10121: retval = 900; break;     // AEGEAN NUMBER NINE HUNDRED
			case 0x10122: retval = 1000; break;    // AEGEAN NUMBER ONE THOUSAND
			case 0x10123: retval = 2000; break;    // AEGEAN NUMBER TWO THOUSAND
			case 0x10124: retval = 3000; break;    // AEGEAN NUMBER THREE THOUSAND
			case 0x10125: retval = 4000; break;    // AEGEAN NUMBER FOUR THOUSAND
			case 0x10126: retval = 5000; break;    // AEGEAN NUMBER FIVE THOUSAND
			case 0x10127: retval = 6000; break;    // AEGEAN NUMBER SIX THOUSAND
			case 0x10128: retval = 7000; break;    // AEGEAN NUMBER SEVEN THOUSAND
			case 0x10129: retval = 8000; break;    // AEGEAN NUMBER EIGHT THOUSAND
			case 0x1012A: retval = 9000; break;    // AEGEAN NUMBER NINE THOUSAND
			case 0x1012B: retval = 10000; break;   // AEGEAN NUMBER TEN THOUSAND
			case 0x1012C: retval = 20000; break;   // AEGEAN NUMBER TWENTY THOUSAND
			case 0x1012D: retval = 30000; break;   // AEGEAN NUMBER THIRTY THOUSAND
			case 0x1012E: retval = 40000; break;   // AEGEAN NUMBER FORTY THOUSAND
			case 0x1012F: retval = 50000; break;   // AEGEAN NUMBER FIFTY THOUSAND
			case 0x10130: retval = 60000; break;   // AEGEAN NUMBER SIXTY THOUSAND
			case 0x10131: retval = 70000; break;   // AEGEAN NUMBER SEVENTY THOUSAND
			case 0x10132: retval = 80000; break;   // AEGEAN NUMBER EIGHTY THOUSAND
			case 0x10133: retval = 90000; break;   // AEGEAN NUMBER NINETY THOUSAND
			case 0x10323: retval = 50; break;      // OLD ITALIC NUMERAL FIFTY

			case 0x010144: retval = 50; break;     // ACROPHONIC ATTIC FIFTY
			case 0x010145: retval = 500; break;    // ACROPHONIC ATTIC FIVE HUNDRED
			case 0x010146: retval = 5000; break;   // ACROPHONIC ATTIC FIVE THOUSAND
			case 0x010147: retval = 50000; break;  // ACROPHONIC ATTIC FIFTY THOUSAND
			case 0x01014A: retval = 50; break;     // ACROPHONIC ATTIC FIFTY TALENTS
			case 0x01014B: retval = 100; break;    // ACROPHONIC ATTIC ONE HUNDRED TALENTS
			case 0x01014C: retval = 500; break;    // ACROPHONIC ATTIC FIVE HUNDRED TALENTS
			case 0x01014D: retval = 1000; break;   // ACROPHONIC ATTIC ONE THOUSAND TALENTS
			case 0x01014E: retval = 5000; break;   // ACROPHONIC ATTIC FIVE THOUSAND TALENTS
			case 0x010151: retval = 50; break;     // ACROPHONIC ATTIC FIFTY STATERS
			case 0x010152: retval = 100; break;    // ACROPHONIC ATTIC ONE HUNDRED STATERS
			case 0x010153: retval = 500; break;    // ACROPHONIC ATTIC FIVE HUNDRED STATERS
			case 0x010154: retval = 1000; break;   // ACROPHONIC ATTIC ONE THOUSAND STATERS
			case 0x010155: retval = 10000; break;  // ACROPHONIC ATTIC TEN THOUSAND STATERS
			case 0x010156: retval = 50000; break;  // ACROPHONIC ATTIC FIFTY THOUSAND STATERS
			case 0x010166: retval = 50; break;     // ACROPHONIC TROEZENIAN FIFTY
			case 0x010167: retval = 50; break;     // ACROPHONIC TROEZENIAN FIFTY ALTERNATE FORM
			case 0x010168: retval = 50; break;     // ACROPHONIC HERMIONIAN FIFTY
			case 0x010169: retval = 50; break;     // ACROPHONIC THESPIAN FIFTY
			case 0x01016A: retval = 100; break;    // ACROPHONIC THESPIAN ONE HUNDRED
			case 0x01016B: retval = 300; break;    // ACROPHONIC THESPIAN THREE HUNDRED
			case 0x01016C: retval = 500; break;    // ACROPHONIC EPIDAUREAN FIVE HUNDRED
			case 0x01016D: retval = 500; break;    // ACROPHONIC TROEZENIAN FIVE HUNDRED
			case 0x01016E: retval = 500; break;    // ACROPHONIC THESPIAN FIVE HUNDRED
			case 0x01016F: retval = 500; break;    // ACROPHONIC CARYSTIAN FIVE HUNDRED
			case 0x010170: retval = 500; break;    // ACROPHONIC NAXIAN FIVE HUNDRED
			case 0x010171: retval = 1000; break;   // ACROPHONIC THESPIAN ONE THOUSAND
			case 0x010172: retval = 5000; break;   // ACROPHONIC THESPIAN FIVE THOUSAND
			case 0x010174: retval = 50; break;     // ACROPHONIC STRATIAN FIFTY MNAS
			case 0x010341: retval = 90; break;     // GOTHIC LETTER NINETY
			case 0x01034A: retval = 900; break;    // GOTHIC LETTER NINE HUNDRED
			case 0x0103D5: retval = 100; break;    // OLD PERSIAN NUMBER HUNDRED
			case 0x01085D: retval = 100; break;    // IMPERIAL ARAMAIC NUMBER ONE HUNDRED
			case 0x01085E: retval = 1000; break;   // IMPERIAL ARAMAIC NUMBER ONE THOUSAND
			case 0x01085F: retval = 10000; break;  // IMPERIAL ARAMAIC NUMBER TEN THOUSAND
			case 0x010919: retval = 100; break;    // PHOENICIAN NUMBER ONE HUNDRED
			case 0x010A46: retval = 100; break;    // KHAROSHTHI NUMBER ONE HUNDRED
			case 0x010A47: retval = 1000; break;   // KHAROSHTHI NUMBER ONE THOUSAND
			case 0x010A7E: retval = 50; break;     // OLD SOUTH ARABIAN NUMBER FIFTY
			case 0x010B5E: retval = 100; break;    // INSCRIPTIONAL PARTHIAN NUMBER ONE HUNDRED
			case 0x010B5F: retval = 1000; break;   // INSCRIPTIONAL PARTHIAN NUMBER ONE THOUSAND
			case 0x010B7E: retval = 100; break;    // INSCRIPTIONAL PAHLAVI NUMBER ONE HUNDRED
			case 0x010B7F: retval = 1000; break;   // INSCRIPTIONAL PAHLAVI NUMBER ONE THOUSAND
			case 0x010E6C: retval = 40; break;     // RUMI NUMBER FORTY
			case 0x010E6D: retval = 50; break;     // RUMI NUMBER FIFTY
			case 0x010E6E: retval = 60; break;     // RUMI NUMBER SIXTY
			case 0x010E6F: retval = 70; break;     // RUMI NUMBER SEVENTY
			case 0x010E70: retval = 80; break;     // RUMI NUMBER EIGHTY
			case 0x010E71: retval = 90; break;     // RUMI NUMBER NINETY
			case 0x010E72: retval = 100; break;    // RUMI NUMBER ONE HUNDRED
			case 0x010E73: retval = 200; break;    // RUMI NUMBER TWO HUNDRED
			case 0x010E74: retval = 300; break;    // RUMI NUMBER THREE HUNDRED
			case 0x010E75: retval = 400; break;    // RUMI NUMBER FOUR HUNDRED
			case 0x010E76: retval = 500; break;    // RUMI NUMBER FIVE HUNDRED
			case 0x010E77: retval = 600; break;    // RUMI NUMBER SIX HUNDRED
			case 0x010E78: retval = 700; break;    // RUMI NUMBER SEVEN HUNDRED
			case 0x010E79: retval = 800; break;    // RUMI NUMBER EIGHT HUNDRED
			case 0x010E7A: retval = 900; break;    // RUMI NUMBER NINE HUNDRED
			case 0x01105E: retval = 40; break;     // BRAHMI NUMBER FORTY
			case 0x01105F: retval = 50; break;     // BRAHMI NUMBER FIFTY
			case 0x011060: retval = 60; break;     // BRAHMI NUMBER SIXTY
			case 0x011061: retval = 70; break;     // BRAHMI NUMBER SEVENTY
			case 0x011062: retval = 80; break;     // BRAHMI NUMBER EIGHTY
			case 0x011063: retval = 90; break;     // BRAHMI NUMBER NINETY
			case 0x011064: retval = 100; break;    // BRAHMI NUMBER ONE HUNDRED
			case 0x011065: retval = 1000; break;   // BRAHMI NUMBER ONE THOUSAND
			case 0x01D36C: retval = 40; break;     // COUNTING ROD TENS DIGIT FOUR
			case 0x01D36D: retval = 50; break;     // COUNTING ROD TENS DIGIT FIVE
			case 0x01D36E: retval = 60; break;     // COUNTING ROD TENS DIGIT SIX
			case 0x01D36F: retval = 70; break;     // COUNTING ROD TENS DIGIT SEVEN
			case 0x01D370: retval = 80; break;     // COUNTING ROD TENS DIGIT EIGHT
			case 0x01D371: retval = 90; break;     // COUNTING ROD TENS DIGIT NINE
			default: retval = -2; break;
			}

			break;
			case (0x00000C00):
				retval = (ch + ((val & 0x3E0) >> 5) & 0x1F) + 10;
				break;
			}
		return retval;
	}

	jbool JCharacterData01::isWhitespace(jint ch) {
		jint props = getProperties(ch);
		return ((props & 0x00007000) == 0x00004000);
	}

	jbyte JCharacterData01::getDirectionality(jint ch) {
		jint val = getProperties(ch);
		jbyte directionality = (jbyte)((val & 0x78000000) >> 27);
		if (directionality == 0xF) {
			directionality = JCharacter::DIRECTIONALITY_UNDEFINED;
		}
		return directionality;
	}

	jbool JCharacterData01::isMirrored(jint ch) {
		jint props = getProperties(ch);
		return ((props & 0x80000000) != 0);
	}

	JCharacterData* JCharacterData01::instance = new JCharacterData01();

	JPrimitiveCharArray* JCharacterData01::initX() {
		jchar Xbuf[] = {0x000, 0x001, 0x002, 0x003, 0x004, 0x004, 0x004, 0x005, 0x006, 0x007, 0x010, 0x011, 0x012, 0x003, 0x013, 0x014, 0x003, 0x003, 0x003, 0x003,
				0x015, 0x004, 0x016, 0x003, 0x017, 0x020, 0x021, 0x003, 0x022, 0x004, 0x023, 0x003, 0x024, 0x025, 0x026, 0x004, 0x027, 0x030, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x031, 0x032, 0x033, 0x003, 0x003, 0x003, 0x003, 0x003, 0x034, 0x035, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x036, 0x037, 0x040, 0x041, 0x003, 0x003, 0x003, 0x003, 0x042, 0x043, 0x044, 0x045, 0x003, 0x003, 0x003, 0x003, 0x042, 0x042, 0x046, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x047, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x050, 0x051, 0x052, 0x053, 0x054, 0x055, 0x056, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x004, 0x004, 0x004, 0x004,
				0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004,
				0x004, 0x004, 0x004, 0x057, 0x003, 0x003, 0x003, 0x003, 0x060, 0x061, 0x062, 0x063, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004,
				0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x057, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004,
				0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x004, 0x064, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x065, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x066, 0x066, 0x066, 0x066, 0x066, 0x066, 0x066, 0x067, 0x066, 0x070, 0x066, 0x071, 0x072, 0x073, 0x074, 0x003,
				0x075, 0x075, 0x076, 0x003, 0x003, 0x003, 0x003, 0x003, 0x075, 0x075, 0x077, 0x100, 0x003, 0x003, 0x003, 0x003, 0x101, 0x102, 0x103, 0x104,
				0x105, 0x106, 0x107, 0x110, 0x111, 0x112, 0x113, 0x114, 0x115, 0x101, 0x102, 0x116, 0x104, 0x117, 0x120, 0x121, 0x110, 0x122, 0x123, 0x124,
				0x125, 0x126, 0x127, 0x130, 0x131, 0x132, 0x133, 0x134, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x075, 0x135, 0x075, 0x075, 0x136, 0x137, 0x140, 0x003, 0x141, 0x142, 0x066, 0x143, 0x144, 0x003, 0x003, 0x145, 0x146, 0x144, 0x147, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x075, 0x150, 0x075, 0x151, 0x136, 0x075, 0x152, 0x153, 0x075, 0x154, 0x155, 0x075, 0x156, 0x075, 0x075, 0x157,
				0x075, 0x160, 0x161, 0x162, 0x003, 0x003, 0x003, 0x163, 0x164, 0x165, 0x166, 0x003, 0x075, 0x075, 0x167, 0x003, 0x075, 0x075, 0x075, 0x136,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003};
		return new JPrimitiveCharArray(2048, Xbuf);
	}

	JPrimitiveCharArray* JCharacterData01::initY() {
		jchar Ybuf[] = {0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x001, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x002,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x002, 0x000, 0x001, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x003,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x002, 0x003, 0x003, 0x004, 0x005, 0x003, 0x006,
				0x007, 0x007, 0x007, 0x007, 0x010, 0x011, 0x012, 0x012, 0x012, 0x012, 0x012, 0x012, 0x012, 0x012, 0x012, 0x012, 0x012, 0x012, 0x012, 0x012,
				0x012, 0x012, 0x003, 0x013, 0x014, 0x014, 0x014, 0x014, 0x015, 0x016, 0x015, 0x015, 0x017, 0x015, 0x015, 0x020, 0x021, 0x015, 0x015, 0x022,
				0x023, 0x024, 0x025, 0x026, 0x027, 0x030, 0x031, 0x015, 0x015, 0x015, 0x015, 0x015, 0x015, 0x032, 0x033, 0x034, 0x035, 0x036, 0x036, 0x036,
				0x036, 0x036, 0x036, 0x036, 0x036, 0x037, 0x003, 0x003, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014,
				0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x040, 0x003, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x002, 0x003, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x002, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x002, 0x041, 0x042, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x043, 0x000, 0x000, 0x000, 0x000, 0x044, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x045, 0x000, 0x000, 0x003, 0x003, 0x000, 0x000, 0x000, 0x000, 0x046, 0x047, 0x050, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x051, 0x051, 0x051, 0x051, 0x051, 0x051, 0x051, 0x051, 0x051, 0x051, 0x051, 0x051, 0x051, 0x051, 0x051, 0x051, 0x051, 0x051, 0x051, 0x051,
				0x052, 0x052, 0x052, 0x052, 0x052, 0x052, 0x052, 0x052, 0x052, 0x052, 0x052, 0x052, 0x052, 0x052, 0x052, 0x052, 0x052, 0x052, 0x052, 0x052,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x003, 0x053, 0x053, 0x053, 0x053, 0x053, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x054, 0x054, 0x054, 0x003, 0x055, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054,
				0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x056, 0x055, 0x003, 0x055, 0x056, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054,
				0x054, 0x054, 0x054, 0x057, 0x060, 0x061, 0x062, 0x063, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x064,
				0x065, 0x066, 0x003, 0x067, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x003, 0x003, 0x057,
				0x070, 0x071, 0x072, 0x073, 0x003, 0x003, 0x071, 0x071, 0x054, 0x054, 0x056, 0x054, 0x056, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054,
				0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x003, 0x003, 0x074, 0x075, 0x003, 0x076, 0x077, 0x077, 0x100, 0x063, 0x003, 0x003, 0x003, 0x003,
				0x101, 0x101, 0x101, 0x101, 0x102, 0x003, 0x003, 0x003, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054,
				0x054, 0x054, 0x103, 0x104, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054,
				0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x003, 0x067, 0x105, 0x105, 0x105, 0x054, 0x054, 0x054, 0x054,
				0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x003, 0x060, 0x060, 0x106, 0x063, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054, 0x054,
				0x054, 0x055, 0x003, 0x003, 0x060, 0x060, 0x106, 0x063, 0x054, 0x054, 0x054, 0x054, 0x055, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x107, 0x107, 0x107, 0x107, 0x107, 0x110, 0x111, 0x111, 0x111, 0x111, 0x111, 0x111, 0x111, 0x111, 0x111, 0x112,
				0x113, 0x114, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x071, 0x071, 0x071, 0x071, 0x071, 0x071, 0x071, 0x115, 0x116, 0x116, 0x116, 0x003,
				0x003, 0x117, 0x117, 0x117, 0x117, 0x117, 0x120, 0x034, 0x034, 0x034, 0x034, 0x121, 0x121, 0x121, 0x121, 0x121, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x074, 0x114, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x122, 0x113, 0x071, 0x123, 0x124, 0x115, 0x125, 0x116, 0x116, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x002,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x126, 0x126, 0x126, 0x126, 0x127, 0x127, 0x127, 0x130, 0x131, 0x131, 0x132, 0x133,
				0x133, 0x133, 0x133, 0x134, 0x134, 0x135, 0x136, 0x137, 0x137, 0x137, 0x131, 0x140, 0x141, 0x142, 0x143, 0x144, 0x133, 0x145, 0x146, 0x147,
				0x150, 0x151, 0x152, 0x153, 0x154, 0x155, 0x155, 0x156, 0x157, 0x160, 0x161, 0x142, 0x162, 0x163, 0x163, 0x163, 0x163, 0x044, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x116, 0x116, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x002, 0x003, 0x003, 0x003, 0x000, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014,
				0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x003, 0x003, 0x003, 0x003, 0x003, 0x014, 0x014, 0x014, 0x005,
				0x013, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x164, 0x165, 0x074, 0x014, 0x164, 0x166,
				0x166, 0x167, 0x170, 0x170, 0x170, 0x171, 0x074, 0x074, 0x074, 0x172, 0x040, 0x074, 0x074, 0x074, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014,
				0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x074, 0x074, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014,
				0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x003, 0x036, 0x036, 0x036, 0x036,
				0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x074, 0x173, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x174,
				0x003, 0x003, 0x003, 0x003, 0x175, 0x175, 0x175, 0x175, 0x175, 0x176, 0x012, 0x012, 0x012, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200,
				0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x200,
				0x200, 0x200, 0x201, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177,
				0x177, 0x177, 0x177, 0x177, 0x177, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x202, 0x177,
				0x003, 0x202, 0x203, 0x202, 0x203, 0x177, 0x202, 0x177, 0x177, 0x177, 0x177, 0x200, 0x200, 0x204, 0x204, 0x200, 0x200, 0x200, 0x204, 0x200,
				0x200, 0x200, 0x200, 0x200, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x200, 0x200, 0x200,
				0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x177, 0x203, 0x177, 0x202, 0x203, 0x177, 0x177, 0x177, 0x202, 0x177,
				0x177, 0x177, 0x202, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x177, 0x203, 0x177, 0x202,
				0x177, 0x177, 0x202, 0x202, 0x003, 0x177, 0x177, 0x177, 0x202, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200,
				0x200, 0x200, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x200, 0x200, 0x200, 0x200, 0x200,
				0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x200, 0x200, 0x200, 0x200, 0x200,
				0x200, 0x200, 0x200, 0x200, 0x177, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x177, 0x177,
				0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200,
				0x200, 0x200, 0x200, 0x200, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x200, 0x200, 0x200, 0x003, 0x177, 0x177, 0x177, 0x177,
				0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x205, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200,
				0x200, 0x206, 0x200, 0x200, 0x200, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x205, 0x200, 0x200,
				0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x206, 0x200, 0x200, 0x200, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177,
				0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x205, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x206,
				0x200, 0x200, 0x200, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x205, 0x200, 0x200, 0x200, 0x200,
				0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x206, 0x200, 0x200, 0x200, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177, 0x177,
				0x177, 0x177, 0x177, 0x177, 0x205, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x200, 0x206, 0x200, 0x200,
				0x200, 0x207, 0x003, 0x210, 0x210, 0x210, 0x210, 0x210, 0x211, 0x211, 0x211, 0x211, 0x211, 0x212, 0x212, 0x212, 0x212, 0x212, 0x213, 0x213,
				0x213, 0x213, 0x213, 0x214, 0x214, 0x214, 0x214, 0x214, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x003, 0x003, 0x036, 0x036, 0x036, 0x036,
				0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x174, 0x215, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x174, 0x215, 0x036, 0x036, 0x036,
				0x036, 0x036, 0x036, 0x036, 0x215, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x216, 0x217, 0x217, 0x217, 0x217, 0x220, 0x003, 0x003,
				0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x005, 0x014, 0x014, 0x014, 0x014,
				0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x003, 0x003, 0x003, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014,
				0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x005, 0x003, 0x003, 0x003, 0x003, 0x003, 0x014,
				0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x005, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x014, 0x005, 0x003, 0x003, 0x003, 0x014, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x174, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x036, 0x036, 0x036, 0x215, 0x036, 0x036, 0x036, 0x036,
				0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x174, 0x003, 0x036, 0x036, 0x174, 0x036,
				0x036, 0x174, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036,
				0x174, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036,
				0x036, 0x036, 0x036, 0x174, 0x174, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036,
				0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x221, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036,
				0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x215, 0x036, 0x174, 0x003, 0x036, 0x036, 0x221, 0x036, 0x036, 0x036, 0x036, 0x036,
				0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x036, 0x036, 0x036, 0x036,
				0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x036, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x215, 0x036, 0x036, 0x215, 0x036, 0x036, 0x036,
				0x036, 0x036, 0x036, 0x036, 0x174, 0x036, 0x174, 0x174, 0x174, 0x174, 0x036, 0x174, 0x036, 0x036, 0x036, 0x003, 0x036, 0x036, 0x215, 0x003,
				0x036, 0x036, 0x215, 0x036, 0x036, 0x036, 0x036, 0x036, 0x174, 0x003, 0x215, 0x036, 0x036, 0x036, 0x036, 0x036, 0x003, 0x003, 0x003, 0x003,
				0x003, 0x003, 0x003, 0x003, 0x036, 0x036, 0x036, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003, 0x003};
		return new JPrimitiveCharArray(1920, Ybuf);
	}

	JString* JCharacterData01::initA_DATA() {
		jchar A_DATAbuf[] = {0x000, 0x7005, 0x000, 0x7005, 0x7800, 0x000, 0x000, 0x7005, 0x000, 0x7005, 0x7800, 0x000, 0x7800, 0x000, 0x7800, 0x000, 0x000, 0x030, 0x6800, 0x030,
				0x000, 0x034, 0x7800, 0x000, 0x7800, 0x000, 0x000, 0x074B, 0x000, 0x074B, 0x000, 0x074B, 0x000, 0x074B, 0x000, 0x046B, 0x000, 0x058B, 0x000, 0x080B,
				0x000, 0x080B, 0x000, 0x080B, 0x7800, 0x000, 0x000, 0x034, 0x000, 0x034, 0x000, 0x034, 0x6800, 0x780A, 0x6800, 0x780A, 0x6800, 0x77EA, 0x6800, 0x744A,
				0x6800, 0x77AA, 0x6800, 0x742A, 0x6800, 0x780A, 0x6800, 0x76CA, 0x6800, 0x774A, 0x6800, 0x780A, 0x6800, 0x780A, 0x6800, 0x766A, 0x6800, 0x752A, 0x6800, 0x750A,
				0x6800, 0x74EA, 0x6800, 0x74EA, 0x6800, 0x74CA, 0x6800, 0x74AA, 0x6800, 0x748A, 0x6800, 0x74CA, 0x6800, 0x754A, 0x6800, 0x752A, 0x6800, 0x750A, 0x6800, 0x74EA,
				0x6800, 0x74CA, 0x6800, 0x772A, 0x6800, 0x780A, 0x6800, 0x764A, 0x6800, 0x780A, 0x6800, 0x080B, 0x6800, 0x080B, 0x6800, 0x080B, 0x6800, 0x080B, 0x6800, 0x034,
				0x6800, 0x034, 0x6800, 0x034, 0x6800, 0x06CB, 0x7800, 0x000, 0x000, 0x034, 0x4000, 0x3006, 0x000, 0x042B, 0x000, 0x048B, 0x000, 0x050B, 0x000, 0x080B,
				0x000, 0x7005, 0x000, 0x780A, 0x000, 0x780A, 0x7800, 0x000, 0x7800, 0x000, 0x000, 0x030, 0x000, 0x030, 0x000, 0x760A, 0x000, 0x760A, 0x000, 0x76EA,
				0x000, 0x740A, 0x000, 0x780A, 0x242, 0x7001, 0x242, 0x7001, 0x241, 0x7002, 0x241, 0x7002, 0x000, 0x3409, 0x000, 0x3409, 0x0800, 0x7005, 0x0800, 0x7005,
				0x0800, 0x7005, 0x7800, 0x000, 0x7800, 0x000, 0x0800, 0x7005, 0x7800, 0x000, 0x0800, 0x030, 0x0800, 0x052B, 0x0800, 0x052B, 0x0800, 0x052B, 0x0800, 0x05EB,
				0x0800, 0x070B, 0x0800, 0x080B, 0x0800, 0x080B, 0x0800, 0x080B, 0x0800, 0x056B, 0x0800, 0x066B, 0x0800, 0x078B, 0x0800, 0x080B, 0x0800, 0x050B, 0x0800, 0x050B,
				0x7800, 0x000, 0x6800, 0x030, 0x0800, 0x7005, 0x4000, 0x3006, 0x4000, 0x3006, 0x4000, 0x3006, 0x7800, 0x000, 0x4000, 0x3006, 0x4000, 0x3006, 0x7800, 0x000,
				0x4000, 0x3006, 0x4000, 0x3006, 0x4000, 0x3006, 0x7800, 0x000, 0x7800, 0x000, 0x4000, 0x3006, 0x0800, 0x042B, 0x0800, 0x042B, 0x0800, 0x04CB, 0x0800, 0x05EB,
				0x0800, 0x030, 0x0800, 0x030, 0x0800, 0x030, 0x7800, 0x000, 0x0800, 0x7005, 0x0800, 0x048B, 0x0800, 0x080B, 0x0800, 0x030, 0x6800, 0x030, 0x6800, 0x030,
				0x0800, 0x05CB, 0x0800, 0x06EB, 0x3000, 0x042B, 0x3000, 0x042B, 0x3000, 0x054B, 0x3000, 0x066B, 0x3000, 0x080B, 0x3000, 0x080B, 0x3000, 0x080B, 0x7800, 0x000,
				0x000, 0x3008, 0x4000, 0x3006, 0x000, 0x3008, 0x000, 0x7005, 0x4000, 0x3006, 0x000, 0x030, 0x000, 0x030, 0x000, 0x030, 0x6800, 0x05EB, 0x6800, 0x05EB,
				0x6800, 0x070B, 0x6800, 0x042B, 0x000, 0x3749, 0x000, 0x3749, 0x000, 0x3008, 0x000, 0x3008, 0x4000, 0x3006, 0x000, 0x3008, 0x000, 0x3008, 0x4000, 0x3006,
				0x000, 0x030, 0x000, 0x1010, 0x000, 0x744A, 0x000, 0x744A, 0x000, 0x776A, 0x000, 0x776A, 0x000, 0x776A, 0x000, 0x76AA, 0x000, 0x76AA, 0x000, 0x76AA,
				0x000, 0x76AA, 0x000, 0x758A, 0x000, 0x758A, 0x000, 0x758A, 0x000, 0x746A, 0x000, 0x746A, 0x000, 0x746A, 0x000, 0x77EA, 0x000, 0x77EA, 0x000, 0x77CA,
				0x000, 0x77CA, 0x000, 0x77CA, 0x000, 0x76AA, 0x000, 0x768A, 0x000, 0x768A, 0x000, 0x768A, 0x000, 0x700A, 0x000, 0x700A, 0x000, 0x75AA, 0x000, 0x75AA,
				0x000, 0x75AA, 0x000, 0x758A, 0x000, 0x752A, 0x000, 0x750A, 0x000, 0x750A, 0x000, 0x74EA, 0x000, 0x74CA, 0x000, 0x74AA, 0x000, 0x74CA, 0x000, 0x74CA,
				0x000, 0x74AA, 0x000, 0x748A, 0x000, 0x748A, 0x000, 0x746A, 0x000, 0x746A, 0x000, 0x744A, 0x000, 0x742A, 0x000, 0x740A, 0x000, 0x770A, 0x000, 0x770A,
				0x000, 0x770A, 0x000, 0x764A, 0x000, 0x764A, 0x000, 0x764A, 0x000, 0x764A, 0x000, 0x762A, 0x000, 0x762A, 0x000, 0x760A, 0x000, 0x752A, 0x000, 0x752A,
				0x000, 0x780A, 0x000, 0x780A, 0x000, 0x034, 0x000, 0x3008, 0x000, 0x3008, 0x4000, 0x3006, 0x000, 0x3008, 0x000, 0x3008, 0x000, 0x3008, 0x4800, 0x1010,
				0x4800, 0x1010, 0x4800, 0x1010, 0x4800, 0x1010, 0x4000, 0x3006, 0x4000, 0x3006, 0x000, 0x034, 0x4000, 0x3006, 0x6800, 0x034, 0x6800, 0x034, 0x7800, 0x000,
				0x000, 0x042B, 0x000, 0x042B, 0x000, 0x054B, 0x000, 0x066B, 0x000, 0x7001, 0x000, 0x7001, 0x000, 0x7002, 0x000, 0x7002, 0x000, 0x7002, 0x7800, 0x000,
				0x000, 0x7001, 0x7800, 0x000, 0x7800, 0x000, 0x000, 0x7001, 0x7800, 0x000, 0x000, 0x7002, 0x000, 0x7001, 0x000, 0x031, 0x000, 0x7002, 0xE800, 0x031,
				0x000, 0x7001, 0x000, 0x7002, 0x1800, 0x3649, 0x1800, 0x3649, 0x1800, 0x3509, 0x1800, 0x3509, 0x1800, 0x37C9, 0x1800, 0x37C9, 0x1800, 0x3689, 0x1800, 0x3689,
				0x1800, 0x3549, 0x1800, 0x3549, 0x7800, 0x000, 0x6800, 0x034, 0x1800, 0x040B, 0x1800, 0x07EB, 0x1800, 0x07EB, 0x1800, 0x07EB, 0x1800, 0x07EB, 0x7800, 0x000,
				0x000, 0x034, 0x6800, 0x034};
		return new JString(new JPrimitiveCharArray(584, A_DATAbuf));
	}

	JPrimitiveCharArray* JCharacterData01::initB() {
		jchar Bbuf[] = {0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x004, 0x004, 0x004, 0x000, 0x004, 0x004, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x004, 0x004, 0x004, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x004, 0x004, 0x004, 0x004, 0x004, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
				0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000};
		return new JPrimitiveCharArray(292, Bbuf);
	}

	JString* JCharacterData01::A_DATA = JCharacterData01::initA_DATA();

	JPrimitiveCharArray* JCharacterData01::X = JCharacterData01::initX();

	JPrimitiveCharArray* JCharacterData01::Y = JCharacterData01::initY();

	JPrimitiveCharArray* JCharacterData01::B = JCharacterData01::initB();

	JPrimitiveIntArray* JCharacterData01::A = initA();

	JPrimitiveIntArray* JCharacterData01::initA() {

		JPrimitiveCharArray* data = A_DATA->toCharArray();
		assert(data->size() == (292*2));
		A = new JPrimitiveIntArray(292);
		jint i = 0, j = 0;
		while (i < (292 * 2)) {
			jint entry = data->getChar(i++) << 16;
			A->setInt(j++, entry | data->getChar(i++));
		}
		return A;
	}




	}
}
